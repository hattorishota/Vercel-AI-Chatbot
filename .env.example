# You must first activate a Billing Account here: https://platform.openai.com/account/billing/overview
# Then get your OpenAI API Key here: https://platform.openai.com/account/api-keys
OPENAI_API_KEY=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

# Generate a random secret: https://generate-secret.vercel.app/32 or `openssl rand -base64 32`
AUTH_SECRET=bf65796fe0154b633606728e7548a1c2
# Create a GitHub OAuth app here: https://github.com/settings/applications/new
# Authorization callback URL: https://authjs.dev/reference/core/providers_github#callback-url
AUTH_GITHUB_ID=14bc2baf5173d42b2d1d
AUTH_GITHUB_SECRET=1c01dacc7709d6849928bc144fc382a7ad74d4b5
# Support OAuth login on preview deployments, see: https://authjs.dev/guides/basics/deployment#securing-a-preview-deployment
# Set the following only when deployed. In this example, we can reuse the same OAuth app, but if you are storing users, we recommend using a different OAuth app for development/production so that you don't mix your test and production user base.
# AUTH_REDIRECT_PROXY_URL=https://YOURAPP.vercel.app/api/auth

# Instructions to create kv database here: https://vercel.com/docs/storage/vercel-kv/quickstart and 
KV_URL="redis://default:723c82bb6aba47eab51e9ec424dcf084@mighty-badger-32885.kv.vercel-storage.com:32885"
KV_REST_API_URL="https://mighty-badger-32885.kv.vercel-storage.com"
KV_REST_API_TOKEN="AYB1ASQgOWQ1MzJiMDgtOWM5ZS00OTFhLThjMjItMjc0MTk5ODRhMDdmNzIzYzgyYmI2YWJhNDdlYWI1MWU5ZWM0MjRkY2YwODQ="
KV_REST_API_READ_ONLY_TOKEN="AoB1ASQgOWQ1MzJiMDgtOWM5ZS00OTFhLThjMjItMjc0MTk5ODRhMDdmYCrheXaHKFwIa1zEwGajfDSbXtruxYIwnGf45tCKR-Q="
